name: CI Pipeline

on:
  push:
    branches:
      - test
      - develop

  pull_request:
    branches:
      - main
      - develop

  workflow_dispatch:

permissions:
    contents: write
    issues: write
    pull-requests: write
    deployments: write
    packages: write

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('src/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip install --upgrade -r src/requirements.txt

    - name: Lint code
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

    - name: Set environment variable
      run: echo "ENVIRONMENT=test" >> $GITHUB_ENV

    - name: Run unit tests
      run: pytest --cov=src src/tests/ci --cov-report=html:src/tests/ci/coverage.html

    - name: Checking code vulnerabilities
      run: bandit -r .

  build:
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Restore pip cache
        uses: actions/cache@v3
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('src/requirements-dev.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

      - name: Install setuptools
        run: |
            python -m pip install --upgrade --force-reinstall pip setuptools

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: cd src/ && docker build -t "${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}" .

      - name: Push Docker image
        run: docker push "${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}"
