name: Build Pipeline

on:
  workflow_run:
    workflows: ["Validate Pipeline"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create VERSION file if not exists
        run: |
          if [ ! -f VERSION ]; then
            echo "0.1.0" > VERSION  # Establece una versi√≥n inicial
          fi

      - name: Read current version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "Current version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          VERSION="${{ env.VERSION }}"
          IFS='.' read -r major minor patch <<< "$VERSION"
          patch=$((patch + 1))  # Incrementa el n√∫mero de parche
          NEW_VERSION="$major.$minor.$patch"
          echo "$NEW_VERSION" > VERSION
          echo "New version is $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit new version
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_NAME }}"
          git add VERSION
          git commit -m "üì¶Ô∏è Bump version to ${{ steps.increment_version.outputs.NEW_VERSION }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/cloudntainer/crud-python.git HEAD:refs/heads/main
